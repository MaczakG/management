# HTTPS szerver
server {
    listen 443 ssl;
    server_name _;  # vagy a publikus domain neved

    ssl_certificate /etc/nginx/ssl/selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/selfsigned.key;

    # --- /partners végpont átirányítása Node.js-re ---
    location /partners {
        proxy_pass http://127.0.0.1:3000;  # NINCS perjel a végén!
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # --- minden más kérés Node.js-re ---
    location / {
        proxy_pass http://127.0.0.1:3000;  # NINCS perjel a végén!
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# HTTP -> HTTPS átirányítás
server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
}
